
    # - name: Install SSH key
    #   uses: shimataro/ssh-key-action@v2
    #   with:
    #     key: ${{ secrets.COBOTSSH }}
    #     name: id_rsa
    #     known_hosts: ${{ secrets.KNOWN_HOSTS }}
    # - name: ssh
    #   run: ssh ${{ secrets.USERNAME }}@${{ secrets.KNOWN_HOSTS }}

# name: Deploy to EC2
# on:
#   push:
#     branches:
#       - main
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#       with:
#         ssh_private_key: ${{ secrets.EC2_PRIVATE_KEY }}
#     - name: Deploy
#       run: |
#         ssh -o StrictHostKeyChecking=no -i $ssh_private_key ec2-user@ec2-18-179-178-60.ap-northeast-1.compute.amazonaws.com 


# name: Deploy to EC2
# on:
#   push:
#     branches:
#       - main
# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Git clone the repository
#         uses: actions/checkout@v2
#       - name: Configure SSH & EC2
#         env:
#             PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
#             HOSTNAME : ${{ secrets.EC2_HOST  }}
#             USER_NAME : ${{ secrets.EC2_USERNAME }}
#         run: |
#           mkdir -p ~/.ssh/
#           echo "$PRIVATE_KEY" > ~/.ssh/github-actions-key
#           chmod 600 ~/.ssh/github-actions-key
#           cat >> ~/.ssh/config 
#           <<END
#           Host ec2
#             HostName $HOSTNAME
#             User $USER_NAME
#             IdentityFile ~/.ssh/github-actions-key
#             StrictHostKeyChecking no
#           END
#       - name :
#         run: |
#         console.log(ec2)
#         ssh ec2 sudo cd ~/lativ-project git pull

# name: Push-to-EC2

# # Trigger deployment only on push to master branch
# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     name: Deploy to EC2 on master branch push
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout the files
#         uses: actions/checkout@v2

#       - name: Deploy to Server 1
#         uses: easingthemes/ssh-deploy@main
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
#           REMOTE_HOST: ${{ secrets.EC2_HOST }}
#           REMOTE_USER: ${{ secrets.EC2_USERNAME }}
#           TARGET: ~/
        # with:  
        #   script:
        #     cd lativ-project

        


# # name: startMagent2DevEC2
# # Controls when the action will run. 
# # This code is set up only to run when you click action in the repository, If you require to run on a push or cron edit below
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   # push:
#   #  branches: [ main ]
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:
# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
# # The type of runner that the job will run on
#     runs-on: ubuntu-latest
# # Below this are each of the steps that are run
#     steps:
# # Name of step
#       - name: Start AWS EC2
#         # Run AWS Command on the GitHub Hosted runner which starts the instance using AWS authentication stored in GitHub Secrets (see below how to add)
#         run: |
#           aws ec2 start-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}


# name: Deploy to EC2
# on:
#   push:
#     branches:
#       - main
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
#     - name: Setup SSH
#       run: |
#         mkdir -p ~/.ssh
#         echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/key
#         chmod 600 ~/.ssh/key
#     - name: Add EC2 host to known_hosts 
#       run: ssh-keyscan -H "ec2-18-179-178-60.ap-northeast-1.compute.amazonaws.com" >> ~/.ssh/known_hosts
#     - name: Deploy
#       run: | 
#         ssh -t -t -i "/home/runner/.ssh/id_rsa" -L "3000:localhost:80 ec2-user@ec2-18-179-178-60.ap-northeast-1.compute.amazonaws.com"



name: Push-to-EC2

# Trigger deployment only on push to master branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to Server 1
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "dist/"
          TARGET: ${{ secrets.EC2_TARGET_DIR }}
          SCRIPT_BEFORE: |
            whoami
            ls -al
          SCRIPT_AFTER: |
            whoami
            ls -al
            echo $RSYNC_STDOUT
              
